
CREATE TABLE AUTHOR ( id INTEGER GENERATED BY DEFAULT AS IDENTITY (start with 1), lastName varchar(50), firstName varchar(50), primary key (id) )
 
insert into AUTHOR values(100, 'Rowling', 'JK')

CREATE TABLE BOOK (idArticle INTEGER, title varchar(50), ISBN varchar(30))

insert into BOOK values(10, 'Harry Potter et la coupe de feu', '00448U573')

CREATE table ARTICLE(idArticle INTEGER GENERATED BY DEFAULT AS IDENTITY (start with 1), price INTEGER, description varchar(20), primary key (idArticle))

insert into ARTICLE values(10, 25, 'Le livre 4 d''Harry Potter')

// un article peut etre un livre, un disque ou un dvd
//ALTER TABLE ARTICLE ADD PRIMARY KEY (idArticle)

ALTER TABLE BOOK ADD FOREIGN KEY (idArticle) REFERENCES ARTICLE(idArticle)

CREATE table DISK(idArticle INTEGER, idMusicien INTEGER)

ALTER TABLE DISK ADD FOREIGN KEY (idArticle) REFERENCES ARTICLE(idArticle)

CREATE table DVD(idArticle INTEGER, idCategorie INTEGER)

ALTER TABLE DVD ADD FOREIGN KEY (idArticle) REFERENCES ARTICLE(idArticle)

// un livre a un ou plusieurs auteurs
CREATE TABLE WROTE_BY_AUTHOR_BOOK (idBook INTEGER, idAuthor INTEGER)
ALTER TABLE WROTE_BY_AUTHOR_BOOK ADD PRIMARY KEY (idBook, idAuthor)
ALTER TABLE BOOK ADD PRIMARY KEY (idArticle)
ALTER TABLE WROTE_BY_AUTHOR_BOOK ADD FOREIGN KEY (idBook) REFERENCES BOOK(idArticle)
// ALTER TABLE AUTHOR ADD PRIMARY KEY (id)
ALTER TABLE WROTE_BY_AUTHOR_BOOK ADD FOREIGN KEY (idAuthor) REFERENCES AUTHOR(id)

// un cd peut etre realisé par un artiste ou un groupe
// un cd appartient a un style musical
// un dvd a une categorie , un realisateur et une ou plusieures vedettes

// je veux pouvoir recuperer la totalité des oeuvre d'un artiste
// je veux pouvoir connaitre la somme (prix) des ventes effectuée par categorie d'articles
// je veux savoir quel style musical connait les meilleures ventes
// je veux resister à l'injection sql
// je veux pouvoir mettre à jour le prix des articles
// les opérations CRUD doivent etre disponible pour chaque table
